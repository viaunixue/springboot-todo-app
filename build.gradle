plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.1'
	id 'io.spring.dependency-management' version '1.1.5'
}

group = 'com.chzzk.study'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-tomcat'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	// implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	implementation 'org.springframework.boot:spring-boot-configuration-processor'
	implementation 'org.springframework.boot:spring-boot-starter-hateoas'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-test'
	developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.0'
	// implementation 'org.springframework.data:spring-data-rest-hal-explorer:4.2.5'
	implementation 'org.apache.tomcat.embed:tomcat-embed-jasper'
	// implementation 'com.h2database:h2'
	implementation 'jakarta.servlet.jsp.jstl:jakarta.servlet.jsp.jstl-api'
	implementation 'org.eclipse.jetty:glassfish-jstl:11.0.21'
	implementation 'org.webjars:bootstrap:5.1.3'
	implementation 'org.webjars:jquery:3.6.0'
	implementation 'org.webjars:bootstrap-datepicker:1.9.0'
	// implementation 'org.hibernate:hibernate-entitymanager:5.5.2.Final'
	implementation 'org.hibernate.orm:hibernate-core:6.5.2.Final'
	implementation 'org.hibernate.orm:hibernate-hikaricp'
	// implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
	// implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml'
	implementation 'com.google.code.findbugs:jsr305:3.0.2'
	implementation 'ch.qos.logback:logback-classic:1.4.12'
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'

	runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
	runtimeOnly 'com.mysql:mysql-connector-j:8.3.0'
	// developmentOnly 'org.springframework.boot:spring-boot-devtools'

	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

//tasks.withType(JavaCompile).configureEach {
//	options.compilerArgs << "-Xlint:unchecked"
//}

tasks.named('test') {
	useJUnitPlatform()
	jvmArgs '-Xshare:off' // JVM 아규먼트 설정
}

def querydslSrcDir = 'src/main/generated'
clean {
	delete file(querydslSrcDir)
}
tasks.withType(JavaCompile) {
	options.generatedSourceOutputDirectory = file(querydslSrcDir)
}